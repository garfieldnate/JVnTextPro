// Useful tasks:
// (default) jar: creates library jar
// fatJar: creates executable jar
// bintrayUpload: performs full publishingTasks/publication

apply plugin: 'java'

wrapper {
    gradleVersion = '4.8.1'
}

repositories {
    mavenCentral()
}

// needed for custom dependencies in the fatJar task
configurations {
    fatJarConf
}

dependencies {
    compile group: 'args4j', name: 'args4j', version: '2.33'
    compile group: 'org.htmlparser', name: 'htmlparser', version: '2.1'
    compile group: 'com.dbtsai.lbfgs', name: 'lbfgs', version: '0.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    fatJarConf group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

// Uncomment this during development but do not publishingTasks with it uncommented!
//sourceSets {
//    main {
//        resources {
//            srcDir 'models'
//        }
//    }
//}

//////////////////////////////////////////////////////////
// Configure all of our artifact-generating tasks below //
//////////////////////////////////////////////////////////

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:all"
}

jar {
    // library clients should configure slf4j themselves
    exclude('logback.xml')
    // models are released in a separate jar
    exclude('/models')
}

task fatJar(type: Jar) {
    description "Build an executable jar with all dependencies and models included"
    manifest {
        attributes 'Main-Class': project.group + '.JVnTextProTest'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from { configurations.fatJarConf.collect { it.isDirectory() ? it : zipTree(it) } }

    // output to STDOUT in the executable jar
    from(sourceSets.main.resources) {
        include('logback.xml')
    }
    from('models') {
        include('**')
    }
    classifier 'executable'
    with jar
}

task modelsJar(type: Jar) {
    description "Build a jar containing just the default models"
    from('models') {
        include('**')
    }
    classifier 'models'
}

task sourcesJar(type: Jar) {
    description "Build a jar containing just the java source files"
    from sourceSets.main.allJava
    classifier 'sources'
}

task javadocsJar(type: Jar) {
    description "Build a jar containing just the JavaDocs"
    from javadoc
    classifier 'javadoc'
}

// add all of the publishing tasks, which rely on the existence of the artifact tasks above
project.ext.artifactsToPublish = [sourcesJar, javadocsJar, modelsJar, fatJar]
apply from: 'scripts/publishingTasks.gradle'
