plugins {
    id "com.jfrog.bintray" version "1.8.3"
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'vn.edu.vnu.jvntext.jvntextpro'
version = '3.0.0'
description = """NLP Toolkit for Vietnamese"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

// needed for custom dependency in fatJar task
configurations {
    fatJarConf
}

dependencies {
    compile group: 'args4j', name: 'args4j', version: '2.33'
    compile group: 'org.htmlparser', name: 'htmlparser', version: '2.1'
    compile group: 'com.dbtsai.lbfgs', name: 'lbfgs', version: '0.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    fatJarConf group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

sourceSets {
    main {
        // include models in the resources so we can load them when the user provides none
        resources {
            srcDir 'models'
        }
    }
}

jar {
    // library clients should configure slf4j themselves
    exclude('logback.xml')
}

task fatJar(type: Jar) {
    description "Build an executable jar with all dependencies included"
    manifest {
        attributes 'Main-Class': project.group + '.JVnTextProTest'
    }
    baseName = baseName + "-executable"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from { configurations.fatJarConf.collect { it.isDirectory() ? it : zipTree(it) } }

    // output to STDOUT in the executable jar
    from(sourceSets.main.resources) {
        include('logback.xml')
    }
    with jar
}

//set compiler specific configs
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:all"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier 'sources'
}

task javadocsJar(type: Jar) {
    from javadoc
    classifier 'javadoc'
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "GPL 2.0"
            url "https://www.gnu.org/licenses/gpl-2.0.en.html"
        }
    }
    developers {
        developer {
            id "ncamtu"
            name "Cam-Tu Nguyen"
            email "ncamtu@gmail.com"
        }
        developer {
            id "pxhieu"
            name "Xuan-Hieu Phan"
            email "pxhieu@gmail.com"
        }
        developer {
            id "trangnt"
            name "Thu-Trang Nguyen"
            email "trangnt84@gmail.com"
        }
        developer {
            id "garfieldnate"
            name "Nathan Glenn"
            email "nathan.g.glenn@gmail.com"
        }
    }
    scm {
        url project.property("vcsUrl")
    }
}

publishing {
    publications {
        JVnTextProPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocsJar
            groupId project.group
            artifactId project.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', project.description)
                root.appendNode('name', project.name)
                root.appendNode('url', project.property("website"))
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.property('bintray.user')
    key = project.property('bintray.key')
    publications =['JVnTextProPublication']
    pkg {
        repo = 'general'
        name = project.name
        desc = project.description
        userOrg = user
        licenses = ['GPL-2.0']
        vcsUrl = project.property("vcsUrl")
        issueTrackerUrl = project.property("vcsUrl") + "/issues"
        websiteUrl = project.property("website")
        githubRepo = 'garfieldnate/JVnTextPro'
        githubReleaseNotesFile = 'CHANGELOG.md'
        labels = ['NLP', 'Vietnamese']
        publicDownloadNumbers = true
        version {
            name = project.version + '-Final'
            desc = project.name + ' ' + project.version + ' final'
            vcsTag = project.version
            gpg {
                sign = true
                passphrase = project.property("signing.password")
            }
            mavenCentralSync {
                user = project.property('sonatype.user')
                password = project.property('sonatype.password')
            }
        }
    }
}

wrapper {
    gradleVersion = '4.8.1'
}
